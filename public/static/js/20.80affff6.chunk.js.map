{"version":3,"sources":["other/page/components/twitter.js"],"names":["blobToBase64","require","TimeAgo","addLocale","tr","timeAgo","TwitterApi","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","call","update","axios","post","window","location","origin","id","then","res","setState","data","visible","state","classes","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","TwitterList","full","Component","_ref","_React$useState","React","useState","_React$useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","tweet","setTweet","_React$useState3","_React$useState4","tweetFile","setTweetFile","_React$useState5","_React$useState6","open","setOpen","dropzone","createRef","className","relative","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_8___default","undefined","root","fullHg","subheader","_material_ui_core_Box__WEBPACK_IMPORTED_MODULE_23__","display","justifyContent","p","bgcolor","_material_ui_core_ListSubheader__WEBPACK_IMPORTED_MODULE_18___default","component","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_19___default","size","onClick","code","react__WEBPACK_IMPORTED_MODULE_6__","map","_ref3","k","user","text","created_at","entities","key","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_ListItemAvatar__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_12___default","alt","name","src","profile_image_url","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_10___default","secondary","gutterMargin","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_13___default","inline","color","format","Date","user_mentions","_ref4","screen_name","_material_ui_core_Chip__WEBPACK_IMPORTED_MODULE_16___default","avatar","_material_ui_icons_Face__WEBPACK_IMPORTED_MODULE_17___default","variant","label","chip","inlineCustom","react_router_dom__WEBPACK_IMPORTED_MODULE_24__","to","bottomFix","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_21___default","classNames","margin","textField","type","value","onChange","_ref2","target","fullWidth","InputProps","endAdornment","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_20___default","position","aria-label","current","click","style","fontSize","length","alert","status","now","file","d","setTimeout","hidden","ref","files","console","log","error","base64","withStyles","theme","width","maxHeight","backgroundColor","overflowX","overflowY","bottom","left","right","padding"],"mappings":"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","file":"static/js/20.80affff6.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TimeAgo from \"javascript-time-ago\";\nimport classNames from \"classnames\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\n// Load locale-specific relative date/time formatting rules.\nimport tr from \"javascript-time-ago/locale/tr\";\nimport { unstable_Box as Box } from \"@material-ui/core/Box\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst blobToBase64 = require(\"blob-to-base64\");\n\n// Add locale-specific relative date/time formatting rules.\nTimeAgo.addLocale(tr);\nconst timeAgo = new TimeAgo(\"tr-TR\");\n\nclass TwitterApi extends Component {\n  constructor() {\n    super();\n    this.state = { data: [], visible: false };\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n  update = () => {\n    axios.post(window.location.origin + \":8000/twitter\", { id: \"lorem ipsm\" }).then(res => {\n      this.setState({ data: res.data, visible: true });\n    });\n  };\n  render() {\n    const { classes } = this.props;\n    if (this.state.visible == false) return <a />;\n    return (\n      <TwitterList\n        data={this.state.data}\n        classes={classes}\n        full={this.props.full ? false : true}\n        update={this.update}\n      />\n    );\n  }\n}\nconst styles = theme => ({\n  relative: {\n    position: \"relative\"\n  },\n  root: {\n    width: \"100%\",\n    maxHeight: 400,\n    backgroundColor: \"#fff\",\n    overflowX: \"hidden\",\n    overflowY: \"scroll\"\n  },\n  fullHg: {\n    maxHeight: \"80vh\",\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    overflowX: \"hidden\",\n    overflowY: \"scroll\",\n    position: \"relative\"\n  },\n  bottomFix: {\n    position: \"absolute\",\n    bottom: \"-10vh\",\n    left: 0,\n    right: 0\n  },\n  inline: {\n    display: \"inline\"\n  },\n  inlineCustom: {\n    display: \"inline\",\n    padding: \"5px 15px\",\n    margin: 20\n  },\n  chip: {\n    margin: 6\n  },\n  margin: {\n    margin: 8\n  },\n  gutterMargin: {\n    margin: \"4px 0\"\n  }\n});\n\nfunction TwitterList({ data, update, full, classes }) {\n  const [tweet, setTweet] = React.useState(\"\");\n  const [tweetFile, setTweetFile] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  let dropzone = React.createRef();\n  const modalToggle = () => {\n    setOpen(!open);\n    dropzone.current.click();\n  };\n  const setFile = () => {\n    let files = dropzone.current.files;\n    console.log(files);\n    blobToBase64(files[0], function(error, base64) {\n      if (!error) {\n        setTweetFile(base64);\n      }\n    });\n  };\n  const postTweet = () => {\n    if (tweet.length < 1 || tweet.length > 239) {\n      alert(\"lütfen \" + tweet.length + \"'den \" + (tweet.length < 1 ? \"fazla \" : \"az \") + \"karakter kullanın\");\n    } else {\n      axios\n        .post(\"http://localhost:8000/twitter-post\", {\n          status: tweet + \"\\n Deneme zamanı : \" + Date.now(),\n          file: tweetFile\n        })\n        .then(d => {\n          setTimeout(() => update(), 1000);\n        });\n      // setTweet(\"\");\n    }\n  };\n  const tweetUpdate = ({ target }) => setTweet(target.value);\n  return (\n    <div className={classes.relative}>\n      <List\n        className={full == undefined ? classes.root : classes.fullHg}\n        subheader={\n          <Box display='flex' justifyContent='space-between' p={1} bgcolor='background.paper'>\n            <Box>\n              <ListSubheader component='div'>Twitter Posts</ListSubheader>\n            </Box>\n            <Box>\n              <IconButton size='small' onClick={update}>\n                <i className='material-icons'>refresh</i>\n              </IconButton>\n            </Box>\n          </Box>\n        }>\n        {data != [] && data[0].code == undefined ? (\n          <Fragment>\n            {data.map(({ user, text, created_at, entities }, k) => (\n              <Fragment key={k}>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar alt={user.name} src={user.profile_image_url} />\n                  </ListItemAvatar>\n                  <ListItemText\n                    secondary={\n                      <Fragment>\n                        {text}\n                        <div className={classes.gutterMargin} />\n                        <Typography component='span' className={classes.inline} color='textPrimary'>\n                          {timeAgo.format(new Date(created_at))}\n                        </Typography>\n                        {entities.user_mentions.map(({ screen_name, name }, k) => (\n                          <Chip\n                            avatar={\n                              <Avatar component='span'>\n                                <FaceIcon />\n                              </Avatar>\n                            }\n                            component='span'\n                            variant='outlined'\n                            label={screen_name}\n                            key={k}\n                            className={classes.chip}\n                          />\n                        ))}\n                      </Fragment>\n                    }\n                  />\n                </ListItem>\n              </Fragment>\n            ))}\n          </Fragment>\n        ) : (\n          <Typography component='p' className={classes.inlineCustom} color='textPrimary'>\n            Şuan Twitter Apisini kullanamazsınız. Gerekli bilgileri girmek için =>\n            <Link to='/api-yonetimi'>Adresine gidin</Link>\n          </Typography>\n        )}\n      </List>\n      {data != [] && data[0].code == undefined && (\n        <div className={full != undefined && classes.bottomFix}>\n          <ListItem>\n            <TextField\n              id='twitter-post-button'\n              className={classNames(classes.margin, classes.textField)}\n              variant='filled'\n              type='textarea'\n              label='Twitter post'\n              value={tweet}\n              onChange={tweetUpdate}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment variant='filled' position='end'>\n                    <IconButton color='secondary' aria-label='Toggle password visibility' onClick={modalToggle}>\n                      <i className='material-icons' style={{ fontSize: 16 }}>\n                        image\n                      </i>\n                    </IconButton>\n                    <IconButton color='primary' aria-label='Toggle password visibility' onClick={postTweet}>\n                      <i className='material-icons' style={{ fontSize: 16 }}>\n                        send\n                      </i>\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </ListItem>\n          <input type='file' hidden ref={dropzone} onChange={setFile} />\n        </div>\n      )}\n    </div>\n  );\n}\nexport default withStyles(styles)(TwitterApi);\n"],"sourceRoot":""}