{"version":3,"sources":["components/chart/dataGenerator.js","components/chart/point.js"],"names":["__webpack_require__","r","__webpack_exports__","d","dataGenerator","getRandom","randomValue","Math","random","normalDistribution","u","v","sqrt","log","cos","PI","pointCount","data","i","push","arg1","val1","arg2","val2","PointChart","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","React","PureComponent","chartData","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_devexpress_dx_react_chart_material_ui__WEBPACK_IMPORTED_MODULE_1__","showGrids","valueField","argumentField","_devexpress_dx_react_chart__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"6FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,kCAAAE,IAAA,IAAMC,EAAY,SAAZA,IACF,IAAMC,EAAcC,KAAKC,SACzB,OAAoB,IAAhBF,EACOD,IAEJC,GAGLG,EAAqB,WACvB,IAAMC,EAAIL,IACJM,EAAIN,IACV,OAAOE,KAAKK,MAAM,EAAML,KAAKM,IAAIH,IAAMH,KAAKO,IAAI,EAAMP,KAAKQ,GAAKJ,IAGvDP,EAAgB,SAACY,GAE1B,IADA,IAAMC,EAAO,GACJC,EAAI,EAAGA,EAAIF,EAAYE,GAAK,EACjCD,EAAKE,KAAK,CACNC,KAAMX,IACNY,KAAMZ,IACNa,KAAMb,IAAuB,EAC7Bc,KAAMd,IAAuB,IAGrC,OAAOQ,g7BCZUO,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACfE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KAEDO,MAAQ,CACTf,KAAMb,wBAAc,MAJTsB,yPADiBO,IAAMC,sDASjC,IACSC,EAAcP,KAAKI,MAAzBf,KAER,OACQmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACItB,KAAMkB,GAENC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcC,WAAS,IACvBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIE,WAAW,OACXC,cAAc,SAElBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIE,WAAW,OACXC,cAAc,SAElBN,EAAAC,EAAAC,cAACK,EAAA,EAAD","file":"static/js/11.4fc56e61.chunk.js","sourcesContent":["const getRandom = () => {\n    const randomValue = Math.random();\n    if (randomValue === 0) {\n        return getRandom();\n    }\n    return randomValue;\n};\n\nconst normalDistribution = () => {\n    const u = getRandom();\n    const v = getRandom();\n    return Math.sqrt(-4.0 * Math.log(u)) * Math.cos(1.0 * Math.PI * v);\n};\n\nexport const dataGenerator = (pointCount) => {\n    const data = [];\n    for (let i = 0; i < pointCount; i += 1) {\n        data.push({\n            arg1: normalDistribution(),\n            val1: normalDistribution(),\n            arg2: normalDistribution() + 3,\n            val2: normalDistribution() + 3,\n        });\n    }\n    return data;\n};","import React, { Component } from 'react';\nimport {\n    Chart,\n    ScatterSeries,\n    ArgumentAxis,\n    ValueAxis,\n} from '@devexpress/dx-react-chart-material-ui';\nimport {  Animation } from '@devexpress/dx-react-chart';\n\nimport { dataGenerator } from './dataGenerator';\n\n\nexport default class PointChart extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: dataGenerator(100),\n        };\n    }\n\n    render() {\n        const { data: chartData } = this.state;\n\n        return (\n                <Chart\n                    data={chartData}\n                >\n                    <ArgumentAxis showGrids />\n                    <ValueAxis />\n                    <ScatterSeries\n                        valueField=\"val1\"\n                        argumentField=\"arg1\"\n                    />\n                    <ScatterSeries\n                        valueField=\"val2\"\n                        argumentField=\"arg2\"\n                    />\n                    <Animation />\n                </Chart>\n        );\n    }\n}\n"],"sourceRoot":""}